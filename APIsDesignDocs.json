{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/account/get_user_auctions/{request_user_id}": {
            "parameters": [
                {
                    "name": "request_user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "User Does Not Exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get user's auctions",
                "operationId": "get_user_auctions",
                "tags": [
                    "account"
                ]
            }
        },
        "/account/get_user_biddings/{request_user_id}": {
            "parameters": [
                {
                    "name": "request_user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "User Does Not Exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get user's biddings",
                "operationId": "get_user_biddings",
                "tags": [
                    "account"
                ]
            }
        },
        "/account/get_user_favorites/{request_user_id}": {
            "parameters": [
                {
                    "name": "request_user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "User Does Not Exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get user's favorites",
                "operationId": "get_user_favorites",
                "tags": [
                    "account"
                ]
            }
        },
        "/account/manage_profile/{request_user_id}": {
            "parameters": [
                {
                    "name": "request_user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Profile Does Not Exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get other user's profile",
                "operationId": "get_manage_profile",
                "tags": [
                    "account"
                ]
            },
            "put": {
                "responses": {
                    "404": {
                        "description": "Profile Does Not Exist"
                    },
                    "400": {
                        "description": "Bad Request Error"
                    },
                    "200": {
                        "description": "User Profile Updated Successfully"
                    }
                },
                "description": "manage user's profile",
                "operationId": "put_manage_profile",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User profile"
                        }
                    }
                ],
                "tags": [
                    "account"
                ]
            }
        },
        "/account/register": {
            "post": {
                "responses": {
                    "400": {
                        "description": "Bad Request Error"
                    },
                    "201": {
                        "description": "Account Created Successfully"
                    },
                    "200": {
                        "description": "Email Already Exists"
                    }
                },
                "description": "Register an account",
                "operationId": "post_register",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/credentials"
                        }
                    }
                ],
                "tags": [
                    "account"
                ]
            }
        },
        "/account/signin": {
            "post": {
                "responses": {
                    "400": {
                        "description": "Bad Request Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "Successful"
                    }
                },
                "description": "Generates a authentication token",
                "operationId": "post_signin",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/credentials"
                        }
                    }
                ],
                "tags": [
                    "account"
                ]
            }
        },
        "/account/signout/{token}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "Successful"
                    }
                },
                "description": "Signout current user.",
                "operationId": "delete_signout",
                "tags": [
                    "account"
                ]
            }
        },
        "/auction": {
            "post": {
                "responses": {
                    "404": {
                        "description": "Failed to create a new auction"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "create an auction item",
                "operationId": "post_auctions_operations",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User input to create auction"
                        }
                    }
                ],
                "tags": [
                    "auction"
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "No auction data stored in database"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get information of all auction data in the database",
                "operationId": "get_auctions_operations",
                "parameters": [
                    {
                        "in": "query",
                        "description": "How many records to return (max 1000, defaut 10)",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "The item to start at(default 0)",
                        "name": "base",
                        "type": "string"
                    }
                ],
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/favorite/set": {
            "put": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "add an auction item to the favourite list of a user",
                "operationId": "put_add_fav_auction",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User input to add an auction to the favourite list"
                        }
                    }
                ],
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/favorite/unset": {
            "put": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "remove an auction item from the favourite list of a user",
                "operationId": "put_remove_fav_auction",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User input to add an auction to the favourite list"
                        }
                    }
                ],
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/get_category/{auction_id}": {
            "parameters": [
                {
                    "name": "auction_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Auction item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get category of an auction item",
                "operationId": "get_single_auction_category",
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/rating": {
            "put": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "rate an auction item after winning a bidding",
                "operationId": "put_rating",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User input to rate an auction"
                        }
                    }
                ],
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/rating/{item_id}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Item ID given when the auction is created",
                    "name": "item_id",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get all ratings on an auction item specified by",
                "operationId": "get_get_rating",
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/search-key/{search_key}": {
            "parameters": [
                {
                    "name": "search_key",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "No data found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "200": {
                        "description": "Data fetched successfully"
                    }
                },
                "description": "Search by key-word",
                "operationId": "get_auction_search1",
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/search/filter": {
            "get": {
                "responses": {
                    "404": {
                        "description": "No data found"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "200": {
                        "description": "Data fetched successfully"
                    }
                },
                "description": "Search by filter",
                "operationId": "get_auction_search2",
                "parameters": [
                    {
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "name": "startDate",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "YYYY-MM-DD",
                        "name": "endDate",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "",
                        "name": "startPrice",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "",
                        "name": "endPrice",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "",
                        "name": "user_id",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "",
                        "name": "category",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "description": "",
                        "name": "location",
                        "type": "string"
                    }
                ],
                "tags": [
                    "auction"
                ]
            }
        },
        "/auction/{item_id}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Item ID given when the auction is created",
                    "name": "item_id",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "get information of an auction item",
                "operationId": "get_single_auction_item_operations",
                "tags": [
                    "auction"
                ]
            },
            "put": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "Update auction item details",
                "operationId": "put_single_auction_item_operations",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Update auction details (user may specify only some of the fields)"
                        }
                    }
                ],
                "tags": [
                    "auction"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "Delete an auction",
                "operationId": "delete_single_auction_item_operations",
                "tags": [
                    "auction"
                ]
            }
        },
        "/bidding": {
            "post": {
                "responses": {
                    "404": {
                        "description": "Requested Resource Does Not Exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "Propose a bid on an item",
                "operationId": "post_bidding_management",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User input to propose a bid & bidding info stored in server"
                        }
                    }
                ],
                "tags": [
                    "bidding"
                ]
            }
        },
        "/bidding/operations": {
            "put": {
                "responses": {
                    "404": {
                        "description": "Specified auction does not exists"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "Accept or decline a the highest bidding on an item",
                "operationId": "put_accept_or_decline_biddings",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User input to accept or decline a bid"
                        }
                    }
                ],
                "tags": [
                    "bidding"
                ]
            }
        },
        "/bidding/{bid_id}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Bidding ID given when the bid was proposed",
                    "name": "bid_id",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Item not found"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "Get bidding information by id",
                "operationId": "get_single_bidding_operations",
                "tags": [
                    "bidding"
                ]
            },
            "delete": {
                "responses": {
                    "404": {
                        "description": "Specified item does not exist"
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "Delete a proposed bid",
                "operationId": "delete_single_bidding_operations",
                "tags": [
                    "bidding"
                ]
            }
        }
    },
    "info": {
        "title": "Online Auction",
        "version": "1.0",
        "description": "Auction Website"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "API-KEY": {
            "type": "apiKey",
            "in": "header",
            "name": "AUTH-TOKEN"
        }
    },
    "security": [
        {
            "API-KEY": []
        }
    ],
    "tags": [
        {
            "name": "auction",
            "description": "Operations related to auction information management"
        },
        {
            "name": "account",
            "description": "Operations related to user accounts"
        },
        {
            "name": "bidding",
            "description": "Operations related to management"
        }
    ],
    "definitions": {
        "User input to create auction": {
            "properties": {
                "seller_name": {
                    "type": "string"
                },
                "seller_id": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "image": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User input to add an auction to the favourite list": {
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "auction_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "User input to rate an auction": {
            "properties": {
                "buyer_id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Update auction details (user may specify only some of the fields)": {
            "properties": {
                "category": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "image": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "credentials": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User profile": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Auction item information"
                    }
                },
                "avatar": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "invisiable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User profile invisiable"
                    }
                }
            },
            "type": "object"
        },
        "Auction item information": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "seller_name": {
                    "type": "string"
                },
                "seller_id": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "image_url": {
                    "type": "string"
                },
                "bidding_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User input to propose a bid & bidding info stored in server"
                    }
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User input to propose a bid & bidding info stored in server": {
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "proposal_price": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "User profile invisiable": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User input to accept or decline a bid": {
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "operation": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}
